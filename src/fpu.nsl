declare fpu {
    input         s1[32]
                , s2[32]
                ;
    output        result[32]
                , sub
                , nan
                , inf
                ;
    func_in       add_s(s1, s2)
                , sub(s1, s2) 
                , mul(s1, s2) 
                , div(s1, s2) 
    func_out      ans(result, sub, nan, inf)
                ;
}

struct st_float {
      sig
    , exp[8]
    , man[23]
}

module fpu {
    st_float reg          st_s1
                        , st_s2
                        , st_ans
                        ;
    wire                  unnorm_man[24]
                        , s1man_s[23]
                        , s2man_s[23]
                        ;
    func_self             chk_except()
                        ;
    proc_name             adjust_digit()
                        , calc_man()
                        , normalize()
                        ;


    func add seq {
        chk_except();
    }

    func chk_except any {
        (st_s1.exp==8'h00) && (st_s1.man!=23'h0) :  sub := 1'b1;
        (st_s1.exp==8'hFF) && (st_s1.man==23'h0) :  inf := 1'b1; 
        (st_s1.exp==8'hFF) && (st_s1.man!=23'h0) :  nan := 1'b1; 
        (st_s1.exp==8'h01)                       :  almost_sub := 1'b1; 
        (st_s1.exp==8'hFE)                       :  almost_nan := 1'b1; 
        (st_s2.exp==8'h00) && (st_s2.man!=23'h0) :  sub := 1'b1;
        (st_s2.exp==8'hFF) && (st_s2.man==23'h0) :  inf := 1'b1; 
        (st_s2.exp==8'hFF) && (st_s2.man!=23'h0) :  nan := 1'b1; 
        (st_s2.exp==8'h01)                       :  almost_sub := 1'b1; 
        (st_s2.exp==8'hFE)                       :  almost_nan := 1'b1; 
    }

    proc adjust_digit {
        st_s1.sig := s1[31];
        st_s2.sig := s2[31];
        any {
            s1[30:23] >= s2[30:23] : {
                st_s1.exp := s1[30:23];
                st_s1.man := s1[22:0];
                st_s2.exp := s1[30:23];
                st_s2.man := s2[22:0] >> (st_s1.exp-st_s2.exp);
                calc_man();
            }
            s1[30:23] <  s2[30:23] : {
                st_s1.exp := s2[30:23];
                st_s1.man := s2[22:0] >> (st_s1.exp-st_s2.exp);
                st_s2.exp := s1[30:23];
                st_s2.man := s1[22:0];
                calc_man();
            }   
        }
    }

    proc calc_man {
        any {
            st_s1.exp :  s1man_s = ~st_s1.man + 23'h1;
           ~st_s1.exp :  s1man_s =  st_s1.man;
            st_s2.exp :  s2man_s = ~st_s2.man + 23'h1;
           ~st_s2.exp :  s2man_s =  st_s2.man;
        }
        unnorm_man = s1man_s + s2man_s;
        any {
            unnorm_man[23] := {
                st_ans.man := unnorm_man[23:1];
                any {
                    almost_nan
                st_ans.exp := st_s1.exp + 8'h1;
    }
}

