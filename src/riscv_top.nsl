#include    "declare.inc"

module riscv_top {

    rv32i_core      core;
    code_rom        rom;
    ram_cascade     ram;
    PLL             pll;

    reg           rst_d[2] = 2'b00
                //, sw_d0[2]
                //, sw_d1[2]
                //, sw_d2[2]
                //, sw_d3[2]
                , led_buf[8] = 8'h00
                ;
    wire          rst_wire
                ;


    {
        //  PLL
        pll.inclk0   = clk_50M;
        core.clk_20M = pll.c0;
        rom.clock    = pll.c0;
        ram.clk_20M  = pll.c0;

        //  reset distribution
        rst_d      := {rst_d[0], 1'b1};
        rst_wire    = rst_d[1];
        pll.areset  = rst_wire;
        core.rst_n  = pll.locked;

        //  connection to ROM
        rom.address = core.iaddr[9:0];
        core.idata  = rom.q;

        //  connection to RAM
        ram.addr    = core.daddr;
        core.rdata  = ram.rdata;
        ram.wdata   = core.wdata;

        //  led output
        led         = led_buf;
        if(core.daddr == 0x00001000)
            led_buf := ram.rdata[7:0];
    }

    func core.dmem_w {
        ram.wren = 4'hF;
    }

    func core.dmem_r {
        ram.wren = 4'h0;
    }
}

